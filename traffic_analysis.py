#!/usr/bin/env python3
"""
Network Traffic Data Analysis Script
Analyzes timestamp-based network metrics data
"""

from datetime import datetime

# Raw data as provided
data = """1755011324304 26770 47659 26772 20049 0 0 0
1755011325342 26770 47659 26772 20049 0 0 0
1755011326370 26770 47659 26772 20049 0 0 0
1755011327393 26770 47659 26772 20049 0 0 0
1755011328409 26770 47659 26772 20049 0 0 0
1755011329427 26770 47659 26772 20049 0 0 0
1755011330445 26770 47659 26772 20049 0 0 0
1755011331462 26770 47659 26772 20049 0 0 0
1755011332472 26770 47659 26772 20049 0 0 0
1755011333490 26770 47659 26772 20049 0 0 0
1755011334506 26770 47659 26772 20049 0 0 0
1755011335524 26770 47659 26772 20049 0 0 0
1755011336541 26770 47659 26772 20049 0 0 0
1755011337561 26770 47659 26772 20049 0 0 0
1755011338581 26770 47659 26772 20049 0 0 0
1755011339620 26770 47659 26772 20049 0 0 0
1755011340641 26770 47659 26772 20049 0 0 0
1755011341665 26770 47659 26772 20049 0 0 0
1755011342683 26770 47659 26772 20049 0 0 0
1755011343703 26770 47659 26772 20049 0 0 0
1755011344721 26770 47659 26772 20049 0 0 0
1755011345736 26770 47659 26772 20049 0 0 0
1755011346751 26770 47659 26772 20049 0 0 0
1755011347771 26770 47659 26772 20049 0 0 0
1755011348788 26770 47659 26772 20049 0 0 0
1755011349800 26770 47659 26772 20049 0 0 0
1755011350818 26770 47659 26772 20049 0 0 0
1755011351837 26770 47659 26772 20049 0 0 0
1755011352855 26770 47659 26772 20049 0 0 0
1755011353870 26770 47659 26772 20049 0 0 0
1755011354888 26770 47659 26772 20049 0 0 0
1755011355902 26770 47659 26772 20049 0 0 0
1755011356918 26770 47659 26772 20049 0 0 0
1755011357931 26770 47659 26772 20049 0 0 0
1755011358951 26770 47659 26772 20049 0 0 0
1755011359970 26770 47659 26772 20049 0 0 0
1755011360984 26770 47659 26772 20049 0 0 0
1755011362010 26770 47659 26772 20049 0 0 0
1755011363065 26770 47659 26772 20049 0 0 0
1755011364081 26812 47728 26811 20072 0 0 0
1755011365106 26948 47930 26943 20136 0 0 0
1755011366142 27113 48236 27107 20270 0 0 0
1755011367168 27274 48547 27269 20408 0 0 0
1755011368184 27435 48880 27430 20576 0 0 0
1755011369203 27530 49053 27521 20650 0 0 0
1755011370231 27701 49394 27695 20815 0 0 0
1755011371255 27887 49771 27883 20990 0 0 0
1755011372265 28067 50135 28061 21169 0 0 0
1755011373281 28255 50495 28250 21338 0 0 0
1755011374292 28431 50846 28425 21505 0 0 0
1755011375301 28609 51185 28602 21665 0 0 0
1755011376316 28787 51546 28775 21834 0 0 0
1755011377328 28954 51872 28947 21984 0 0 0
1755011378342 29126 52206 29122 22146 0 0 0
1755011379351 29309 52565 29301 22315 0 0 0
1755011380360 29468 52875 29466 22461 0 0 0
1755011381371 29641 53220 29638 22623 0 0 0
1755011382392 29811 53559 29803 22779 0 0 0
1755011383412 29975 53873 29965 22929 0 0 0
1755011384444 30150 54221 30146 23087 0 0 0
1755011385464 30321 54558 30315 23248 0 0 0
1755011386486 30481 54866 30472 23395 0 0 0
1755011387507 30656 55224 30654 23559 0 0 0
1755011388536 30835 55566 30828 23716 0 0 0
1755011389549 31010 55902 31002 23869 0 0 0
1755011390566 31178 56233 31169 24032 0 0 0
1755011391600 31354 56586 31347 24191 0 0 0
1755011392622 31523 56922 31517 24349 0 0 0
1755011393635 31688 57241 31680 24501 0 0 0
1755011394658 31847 57548 31838 24646 0 0 0
1755011395683 32005 57872 32000 24802 0 0 0
1755011396698 32178 58198 32170 24950 0 0 0
1755011397731 32343 58539 32341 25115 0 0 0
1755011398763 32513 58867 32505 25270 0 0 0
1755011399781 32683 59200 32676 25429 0 0 0
1755011400800 32842 59513 32837 25577 0 0 0
1755011401842 32987 59809 32981 25720 0 0 0
1755011402874 33143 60100 33135 25850 0 0 0
1755011403892 33295 60411 33287 26001 0 0 0
1755011404913 33444 60699 33436 26133 0 0 0
1755011405931 33592 60993 33588 26281 0 0 0
1755011406957 33778 61355 33768 26446 0 0 0
1755011407985 33939 61669 33929 26602 0 0 0
1755011409010 34112 62005 34105 26759 0 0 0
1755011410028 34274 62321 34266 26908 0 0 0
1755011411048 34451 62662 34441 27067 0 0 0
1755011412064 34628 63029 34619 27246 0 0 0
1755011413077 34801 63369 34791 27406 0 0 0
1755011414108 34958 63684 34949 27554 0 0 0
1755011415124 35142 64031 35136 27706 0 0 0
1755011416134 35311 64362 35304 27866 0 0 0
1755011417154 35473 64694 35470 28028 0 0 0
1755011418169 35662 65056 35653 28199 0 0 0
1755011419195 35843 65417 35835 28369 0 0 0
1755011420214 36005 65736 36002 28519 0 0 0
1755011421245 36179 66072 36174 28678 0 0 0
1755011422259 36349 66409 36342 28835 0 0 0
1755011423275 36515 66716 36507 28971 0 0 0
1755011424301 36684 67056 36675 29127 0 0 0
1755011425322 36854 67409 36855 29309 0 0 0
1755011426354 37019 67725 37016 29449 0 0 0
1755011427380 37211 68087 37203 29614 0 0 0
1755011428397 37378 68411 37371 29769 0 0 0
1755011429418 37540 68732 37537 29915 0 0 0
1755011430434 37722 69090 37717 30087 0 0 0
1755011431460 37898 69429 37890 30241 0 0 0
1755011432469 38072 69766 38067 30394 0 0 0
1755011433480 38241 70099 38232 30557 0 0 0
1755011434498 38412 70425 38405 30702 0 0 0
1755011435510 38586 70769 38577 30870 0 0 0
1755011436520 38743 71076 38740 31015 0 0 0
1755011437535 38917 71417 38911 31177 0 0 0
1755011438563 39090 71760 39080 31347 0 0 0
1755011439582 39266 72105 39262 31500 0 0 0
1755011440605 39448 72459 39445 31664 0 0 0
1755011441629 39606 72780 39605 31820 0 0 0
1755011442637 39774 73115 39773 31978 0 0 0
1755011443644 39954 73455 39944 32135 0 0 0
1755011444661 40126 73795 40121 32290 0 0 0
1755011445687 40306 74153 40299 32456 0 0 0
1755011446706 40430 74383 40421 32561 0 0 0
1755011447727 40540 74599 40532 32661 0 0 0
1755011448747 40696 74915 40692 32817 0 0 0
1755011449763 40870 75264 40862 32985 0 0 0
1755011450779 41046 75604 41039 33145 0 0 0
1755011451813 41136 75779 41129 33224 0 0 0
1755011452840 41303 76108 41298 33374 0 0 0
1755011453853 41466 76436 41465 33532 0 0 0
1755011454877 41632 76764 41626 33687 0 0 0
1755011455891 41806 77105 41799 33850 0 0 0
1755011456910 41969 77428 41962 34002 0 0 0
1755011457926 42133 77744 42131 34148 0 0 0
1755011458939 42316 78102 42307 34317 0 0 0
1755011459964 42495 78452 42487 34483 0 0 0
1755011461002 42642 78743 42632 34617 0 0 0
1755011462035 42781 79025 42775 34752 0 0 0
1755011463055 42878 79215 42871 34847 0 0 0
1755011464081 43039 79524 43030 34994 0 0 0
1755011465107 43185 79815 43180 35130 0 0 0
1755011466136 43353 80151 43348 35295 0 0 0
1755011467155 43515 80463 43512 35441 0 0 0
1755011468199 43673 80760 43666 35569 0 0 0
1755011469224 43818 81052 43810 35712 0 0 0
1755011470248 43982 81375 43972 35860 0 0 0
1755011471266 44144 81691 44135 36008 0 0 0
1755011472278 44318 82036 44310 36173 0 0 0
1755011473297 44480 82352 44470 36323 0 0 0
1755011474316 44631 82643 44623 36455 0 0 0
1755011475343 44814 83015 44806 36629 0 0 0
1755011476364 44988 83360 44985 36795 0 0 0
1755011477391 45163 83694 45156 36949 0 0 0
1755011478417 45335 84032 45330 37108 0 0 0
1755011479434 45528 84408 45519 37289 0 0 0
1755011480441 45653 84658 45642 37398 0 0 0
1755011481456 45790 84928 45784 37538 0 0 0
1755011482475 45975 85279 45964 37703 0 0 0
1755011483496 46147 85624 46142 37868 0 0 0
1755011484507 46309 85940 46300 38010 0 0 0
1755011485519 46485 86295 46477 38179 0 0 0
1755011486542 46655 86621 46644 38334 0 0 0
1755011487562 46821 86941 46812 38485 0 0 0
1755011488576 46971 87244 46966 38630 0 0 0
1755011489587 47145 87581 47138 38790 0 0 0
1755011490594 47316 87924 47309 38952 0 0 0
1755011491606 47499 88280 47493 39115 0 0 0
1755011492626 47682 88638 47674 39286 0 0 0
1755011493643 47858 88983 47850 39447 0 0 0
1755011494653 47985 89246 47976 39565 0 0 0
1755011495665 48126 89522 48119 39710 0 0 0
1755011496683 48301 89862 48291 39874 0 0 0
1755011497706 48488 90228 48481 40039 0 0 0
1755011498724 48661 90564 48655 40198 0 0 0
1755011499741 48819 90882 48814 40353 0 0 0
1755011500772 48995 91226 48983 40513 0 0 0
1755011501786 49187 91593 49175 40684 0 0 0
1755011502801 49357 91930 49351 40847 0 0 0
1755011503816 49512 92238 49506 40996 0 0 0
1755011504837 49719 92575 49701 41129 0 0 0
1755011505855 50038 92892 50022 41129 0 0 0
1755011506864 50362 93217 50350 41129 0 0 0
1755011507873 50690 93545 50677 41129 0 0 0
1755011508882 51013 93869 50999 41129 0 0 0
1755011509898 51325 94179 51312 41129 0 0 0
1755011510914 51661 94517 51642 41129 0 0 0
1755011511934 51981 94837 51971 41129 0 0 0
1755011512946 52307 95162 52296 41129 0 0 0
1755011513961 52622 95477 52612 41129 0 0 0
1755011514978 52969 95824 52959 41129 0 0 0
1755011515996 53323 96176 53315 41129 0 0 0
1755011517010 53657 96509 53642 41129 0 0 0
1755011518029 53983 96838 53966 41129 0 0 0
1755011519053 54308 97164 54292 41129 0 0 0
1755011520079 54662 97518 54649 41129 0 0 0
1755011521100 54949 97803 54933 41129 0 0 0
1755011522125 55259 98113 55237 41129 0 0 0
1755011523141 55523 98379 55520 41129 0 0 0
1755011524158 55815 98670 55808 41129 0 0 0
1755011525174 56127 98982 56117 41129 0 0 0
1755011526192 56432 99288 56420 41129 0 0 0
1755011527213 56747 99602 56727 41129 0 0 0
1755011528261 56877 99733 56878 41129 0 0 0
1755011529272 56877 99733 56878 41129 0 0 0
1755011530283 56877 99733 56878 41129 0 0 0
1755011531291 56877 99733 56878 41129 0 0 0
1755011532300 56877 99733 56878 41129 0 0 0
1755011533308 56877 99733 56878 41129 0 0 0
1755011534319 56877 99733 56878 41129 0 0 0
1755011535329 56877 99733 56878 41129 0 0 0
1755011536336 56877 99733 56878 41129 0 0 0
1755011537344 56877 99733 56878 41129 0 0 0
1755011538353 57168 100024 57163 41129 0 0 0
1755011539361 57518 100374 57518 41129 0 0 0
1755011540371 57872 100728 57869 41129 0 0 0
1755011541382 58236 101092 58223 41129 0 0 0
1755011542389 58605 101460 58600 41129 0 0 0
1755011543401 58959 101815 58943 41129 0 0 0
1755011544412 59306 102162 59293 41129 0 0 0
1755011545427 59682 102538 59670 41129 0 0 0
1755011546437 60051 102905 60036 41129 0 0 0
1755011547449 60416 103272 60402 41129 0 0 0
1755011548459 60772 103627 60758 41129 0 0 0
1755011549468 61113 103968 61102 41129 0 0 0
1755011550480 61486 104342 61468 41129 0 0 0
1755011551493 61846 104702 61839 41129 0 0 0
1755011552500 62215 105071 62197 41129 0 0 0
1755011553509 62579 105435 62574 41129 0 0 0
1755011554521 62943 105798 62932 41129 0 0 0
1755011555532 63311 106167 63310 41129 0 0 0
1755011556543 63723 106577 63701 41129 0 0 0
1755011557554 64134 106988 64116 41129 0 0 0
1755011558570 64565 107423 64549 41129 0 0 0
1755011559582 64992 107847 64982 41129 0 0 0
1755011560592 65429 108285 65416 41129 0 0 0
1755011561600 65875 108731 65874 41129 0 0 0
1755011562620 66320 109175 66308 41129 0 0 0
1755011563627 66756 109612 66750 41129 0 0 0
1755011564638 67230 110085 67215 41129 0 0 0
1755011565648 67687 110542 67672 41129 0 0 0
1755011566658 68121 110976 68109 41129 0 0 0
1755011567669 68527 111382 68526 41129 0 0 0
1755011568679 68972 111827 68960 41129 0 0 0
1755011569690 69420 112276 69416 41129 0 0 0
1755011570712 69889 112745 69867 41129 0 0 0
1755011571721 70311 113167 70300 41129 0 0 0
1755011572731 70769 113622 70755 41129 0 0 0
1755011573746 71226 114084 71205 41129 0 0 0
1755011574760 71655 114508 71638 41129 0 0 0
1755011575769 72107 114962 72103 41129 0 0 0
1755011576780 72560 115416 72546 41129 0 0 0
1755011577791 73020 115875 73000 41129 0 0 0
1755011578800 73445 116301 73432 41129 0 0 0
1755011579824 73906 116760 73891 41129 0 0 0
1755011580840 74340 117196 74315 41129 0 0 0
1755011581891 74766 117617 74744 41129 0 0 0
1755011582902 75190 118046 75178 41129 0 0 0
1755011583927 75625 118481 75609 41129 0 0 0
1755011584941 76044 118900 76039 41129 0 0 0
1755011585951 76447 119303 76440 41129 0 0 0
1755011586959 76757 119613 76758 41129 0 0 0
1755011587971 76770 119626 76772 41129 0 0 0"""

def analyze_traffic_data():
    """Analyze network traffic data and calculate statistics"""
    
    # Parse data into lists
    lines = data.strip().split('\n')
    
    # Column headers
    headers = [
        'Timestamp', 'EndpointsSaved', 'ProfiledRemote', 'SaveRemote', 
        'UpdateEndpoints', 'OwnerChanged', 'LSDEndpoints', 'OwnerChangedRetrieved'
    ]
    
    # Parse each line
    parsed_data = []
    for line in lines:
        values = list(map(int, line.split()))
        parsed_data.append(values)
    
    # Extract timestamps and convert to datetime
    timestamps = [row[0] for row in parsed_data]
    start_timestamp = min(timestamps)
    end_timestamp = max(timestamps)
    
    # Convert timestamps (assuming milliseconds since epoch)
    start_time = datetime.fromtimestamp(start_timestamp / 1000)
    end_time = datetime.fromtimestamp(end_timestamp / 1000)
    duration = end_time - start_time
    
    print("=" * 60)
    print("NETWORK TRAFFIC ANALYSIS REPORT")
    print("=" * 60)
    
    print(f"\n📅 TIMING INFORMATION:")
    print(f"Start Time: {start_time}")
    print(f"End Time:   {end_time}")
    print(f"Duration:   {duration}")
    print(f"Total Records: {len(parsed_data)}")
    
    # Calculate rates (changes per second)
    print(f"\n📊 ATTRIBUTE STATISTICS:")
    print("-" * 60)
    
    duration_seconds = duration.total_seconds()
    
    for i, col in enumerate(headers[1:], 1):  # Skip timestamp
        values = [row[i] for row in parsed_data]
        
        # Calculate rate of change
        rate_changes = []
        for j in range(1, len(values)):
            rate_changes.append(values[j] - values[j-1])
        
        max_rate = max(rate_changes) if rate_changes else 0
        avg_rate = sum(rate_changes) / len(rate_changes) if rate_changes else 0
        
        print(f"\n{col}:")
        print(f"  Initial Value: {values[0]:,}")
        print(f"  Final Value:   {values[-1]:,}")
        print(f"  Total Change:  {values[-1] - values[0]:,}")
        print(f"  Average Rate:  {avg_rate:.2f} per measurement")
        print(f"  Max Rate:      {max_rate:,} per measurement")
        print(f"  Min Value:     {min(values):,}")
        print(f"  Max Value:     {max(values):,}")
    
    # Identify periods of activity
    print(f"\n🔍 ACTIVITY ANALYSIS:")
    print("-" * 60)
    
    # Find when significant changes occur
    for i, col in enumerate(headers[1:4], 1):  # Focus on main metrics
        values = [row[i] for row in parsed_data]
        timestamps_dt = [datetime.fromtimestamp(row[0] / 1000) for row in parsed_data]
        
        # Find first and last significant change
        first_change_idx = None
        last_change_idx = None
        
        for j in range(1, len(values)):
            if values[j] != values[j-1]:
                if first_change_idx is None:
                    first_change_idx = j
                last_change_idx = j
        
        if first_change_idx is not None:
            print(f"\n{col} Activity:")
            print(f"  First Change: {timestamps_dt[first_change_idx]}")
            print(f"  Last Change:  {timestamps_dt[last_change_idx]}")
            print(f"  Active Period: {timestamps_dt[last_change_idx] - timestamps_dt[first_change_idx]}")
    
    return parsed_data

if __name__ == "__main__":
    data_result = analyze_traffic_data()
