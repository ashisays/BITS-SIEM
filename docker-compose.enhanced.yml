version: '3.8'

services:
  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: bits-siem-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: bits-siem-postgres
    environment:
      POSTGRES_DB: siem
      POSTGRES_USER: siem
      POSTGRES_PASSWORD: siem123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U siem -d siem"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Enhanced Notification Service
  notification:
    build: ./notification
    container_name: bits-siem-notification
    ports:
      - "8001:8001"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - SMTP_SERVER=localhost
      - SMTP_PORT=587
      - EMAIL_FROM=siem@company.com
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # API Service
  api:
    build: ./api
    container_name: bits-siem-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://siem:siem123@postgres:5432/siem
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - NOTIFICATION_SERVICE_URL=http://notification:8001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      notification:
        condition: service_healthy
    volumes:
      - ./api:/app
    restart: unless-stopped

  # Ingestion Service
  ingestion:
    build: ./ingestion
    container_name: bits-siem-ingestion
    ports:
      - "514:514/udp"
      - "601:601/tcp"
      - "6514:6514/tcp"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DATABASE_URL=postgresql://siem:siem123@postgres:5432/siem
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./ingestion:/app
    restart: unless-stopped

  # Processing Service
  processing:
    build: ./processing
    container_name: bits-siem-processing
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DATABASE_URL=postgresql://siem:siem123@postgres:5432/siem
      - NOTIFICATION_SERVICE_URL=http://notification:8001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      notification:
        condition: service_healthy
    volumes:
      - ./processing:/app
    restart: unless-stopped

  # Dashboard (Vue.js frontend)
  dashboard:
    build: ./dashboard
    container_name: bits-siem-dashboard
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_NOTIFICATION_WS_URL=ws://localhost:8001
    depends_on:
      api:
        condition: service_started
      notification:
        condition: service_healthy
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: bits-siem-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - dashboard
      - notification
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
